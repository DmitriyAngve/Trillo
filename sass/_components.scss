///////////////////////////////////////////
/// LOGO

.logo {
  height: 3.25rem;
  margin-left: 2rem;
}

///////////////////////////////////////////
/// SEARCH
.search {
  flex: 0 0 40%;

  display: flex;
  align-items: center;
  justify-content: center;

  @media only screen and (max-width: $bp-smallest) {
    //make this element last in flex this is "order" property, coz default order set is 0!
    order: 1;
    // dont grow dont shrink only increase the width. We need this for increase search bar
    flex: 0 0 100%;
    // stretch the search bar for all space
    background-color: var(--color-grey-light-2);
  }

  &__input {
    font-family: inherit;
    font-size: inherit;
    background-color: var(--color-grey-light-2);
    border: none;
    padding: 0.7rem 2rem;
    border-radius: 100px;
    width: 90%;
    transition: all 0.2s;
    margin-right: -3.25rem;

    &:focus {
      outline: none;
      width: 100%;
      background-color: var(--color-grey-light-3);
    }

    &::-webkit-input-placeholder {
      font-weight: 100;
      color: var(--color-grey-light-4);
    }
  }

  &__input:focus + &__button {
    background-color: var(--color-grey-light-3);
  }

  &__button {
    border: none;
    background-color: var(--color-grey-light-2);

    &:focus {
      outline: none;
    }

    &:active {
      transform: translateY(2px);
    }
  }

  &__icon {
    height: 2rem;
    width: 2rem;
    fill: var(--color-grey-dark-3);
  }
}

///////////////////////////////////////////
/// USER NAVIGATION
.user-nav {
  align-self: stretch; // occupy all available space

  display: flex;
  align-items: center;

  & > * {
    // all div in user-nav (icon-box, icon-box, user)
    padding: 0 2rem;
    cursor: pointer;
    height: 100%; // for fill entire all area on hover
    display: flex;
    align-items: center;
  }

  & > *:hover {
    background-color: var(--color-grey-light-2);
  }

  &__icon-box {
    position: relative; // associated with position:absolute in__notification;
  }

  &__icon {
    height: 2.25rem;
    width: 2.25rem;
    fill: var(--color-grey-dark-2);
  }

  &__notification {
    font-size: 0.8rem;
    height: 1.75rem;
    width: 1.75rem;
    border-radius: 50%;
    background-color: var(--color-primary);
    color: #fff;
    position: absolute; // associated with position:relative in __icon-box;
    top: 1.5rem; // dispose red circles
    right: 1.1rem; // dispose red circles

    display: flex; // flex for text
    justify-content: center;
    align-items: center;
  }

  &__user-photo {
    height: 3.75rem;
    border-radius: 50%;
    margin-right: 1rem;
  }
}

///////////////////////////////////////////
/// SIDE NAVIGATION

.side-nav {
  font-size: 1.4rem;
  list-style: none;
  margin-top: 3.5rem;

  @media only screen and (max-width: $bp-medium) {
    // after moving top (_layout.scss/.content we need arrange the menu one after the other
    display: flex;
    //slightly move top
    margin: 0;
  }

  &__item {
    position: relative; //associated with position:absolute in __item::before

    &:not(:last-child) {
      // divide the red strip linking to each icon
      margin-bottom: 0.5rem;

      @media only screen and (max-width: $bp-medium) {
        // remove margin from the bottom
        margin: 0;
      }
    }
    @media only screen and (max-width: $bp-medium) {
      // make the menu occupy the entire width
      flex: 1;
    }
  }

  &__item::before {
    // doing red hover effect which fills icon and text (its only strip)
    content: ""; //always for this tips
    position: absolute; //associated with position:absolute in __item
    top: 0;
    left: 0;
    height: 100%;
    width: 3px;
    background-color: var(--color-primary);
    // normal state (not filled)
    transform: scaleY(0);
    // transform-origin: bottom; - red strip grows from below
    // make animation scale
    transition: transform 0.2s, width 0.4s cubic-bezier(1, 0, 0, 1) 0.2s,
      background-color 0.1s;
    // about width: 0.4s - animation full time; 0.2s - delay
  }

  &__item:hover::before,
  &__item--active:before {
    //make visible only on hovering (red strip); fills on hover scaling from 0 to 1
    transform: scaleY(1);
    //do an increase in the width of the strip
    width: 100%; // from 3px (__item::before) to 100% of container
  }

  &__item:active::before {
    //make effect "while the button is pressed"
    background-color: var(--color-primary-light);
  }

  &__link:link,
  &__link:visited {
    //stylize svg icon !TEXT! side-nav
    color: var(--color-grey-light-1);
    text-decoration: none;
    text-transform: uppercase;
    padding: 1.5rem 3rem;
    //so that text is not filled with red strip, without position:relative won't work
    position: relative;
    z-index: 10;
    // doesn't matter block or inline-block (just important is that it's a block)
    display: block;

    //doing vertical alignment icons and text
    display: flex;
    align-items: center;

    @media only screen and (max-width: $bp-medium) {
      // center text in menu
      justify-content: center;
      // increase the menu
      padding: 2rem;
    }

    @media only screen and (max-width: $bp-small) {
      //two elements inside of the link but we need to arrange one below the other
      flex-direction: column;
      // decrease the menu
      padding: 1.5rem 0.5rem;
    }
  }

  &__icon {
    width: 1.75rem;
    height: 1.75rem;
    margin-right: 2rem;
    fill: currentColor; //  color of current element (link) inherits the color of the parent (even when hovering)

    @media only screen and (max-width: $bp-small) {
      // decrease the margin
      margin-right: 0;
      margin-bottom: 0.7rem;
      // sligthly decrease
      width: 1.5rem;
      height: 1.5rem;
    }
  }
}

///////////////////////////////////////////
/// LEGAL COMPONENT

.legal {
  font-size: 1.2rem; // editing the legal mark
  color: var(--color-grey-light-4);
  text-align: center;
  padding: 2.5rem;

  @media only screen and (max-width: $bp-medium) {
    display: none; // delete legal text
  }
}

///////////////////////////////////////////
/// GALLERY
.gallery {
  //arrange elements for one another**
  display: flex; //**
  &__photo {
    //formatting photo for responsive design (need to image stays flexible in all desktops)
    width: 100%;
    //arrange elements for one another** (thats's about having a small space underneath an image which happens when we leave it as an inline-element
    display: block; //**
  }
}

///////////////////////////////////////////
/// HOTEL OVERVIEW

.overview {
  display: flex; // need for positioning one by one
  align-items: center; // vertically aligned
  border-bottom: var(--line);

  &__heading {
    //formatting "Hotel Las Palmas"
    font-size: 2.25rem;
    font-weight: 300;
    text-transform: uppercase;
    letter-spacing: 1px;
    padding: 1.5rem 3rem;

    @media only screen and (max-width: $bp-small) {
      //decrease the heading "Hotel Las Palmas"
      font-size: 1.8rem;
      padding: 1.25rem 2rem;
    }

    @media only screen and (max-width: $bp-smallest) {
      // decrease the heading "Hotel Las Palmas"
      font-size: 1.7rem;
      padding: 1rem 1.7rem;
    }

    @media only screen and (max-width: $bp-smallest-2) {
      // decrease the heading "Hotel Las Palmas"
      font-size: 1.5rem;
      padding: 1rem 1.2rem;
    }

    @media only screen and (max-width: $bp-smallest-3) {
      // decrease the heading "Hotel Las Palmas"
      font-size: 1.4rem;
      padding: 1rem 1rem;
    }
  }

  &__stars {
    margin-right: auto; // need for stars icons occupy all available space (flex: 1 - could be so, but stars will occupy all space between "Hotel.." and location icon

    // setting their parent element to Flexbox - to remove space between icons stars (squeeze)
    display: flex;
    align-content: center;
  }

  &__icon-star,
  &__icon-location {
    // formatting icons without height elements will scatter
    width: 1.75rem;
    height: 1.75rem;
    fill: var(--color-primary);
  }

  &__location {
    // do vertically align of icon and text and formatting
    font-size: 1.2rem;
    display: flex;
    vertical-align: center;
  }

  &__icon-location {
    // do space between icon and text
    margin-right: 0.5rem;
  }

  &__rating {
    background-color: var(--color-primary);
    color: #fff;
    // do space between location and rating
    margin-left: 3rem;
    // expand sizes of element
    padding: 0 2.25rem;
    // stretch element to the top and bottom for occupy all space
    align-self: stretch;

    // stretch element to the right and left for occupy all space and centered text inside the element
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    @media only screen and (max-width: $bp-small) {
      // slightly decrease the "Rating" pink container
      padding: 0 1.5rem;
    }
  }

  &__rating-average {
    // formatting the rating text
    font-size: 2.25rem;
    font-weight: 300;
    margin-bottom: -3px;

    // @media only screen and (max-width: $bp-small) {
    //   // slightly decrease the font-size
    //   font-size: 1.8rem;
    // }

    // @media only screen and (max-width: $bp-little) {
    //   // slightly decrease the font-size
    //   font-size: 1.4rem;
    // }
  }

  &__rating-count {
    // formatting count
    font-size: 0.8rem;
    text-transform: uppercase;
  }
}

///////////////////////////////////////////
/// BUTTON INLINE (В соответствии)
.btn-inline {
  border: none;
  color: var(--color-primary);
  font-size: inherit;
  border-bottom: 1px solid currentColor; // color same the btn
  padding-bottom: 2px; // create space between the text and the border
  display: inline-block;
  background-color: transparent; // remove gray color
  cursor: pointer;
  transition: all 0.2s; // animation delay for focus effect

  & span {
    //this span needs - is just a small margin to the left side
    margin-left: 3px;
    // animate motion of arrow in button
    transition: margin-left 0.2s;
  }

  &:hover {
    color: var(--color-grey-dark-1);

    span {
      margin-left: 8px; // its for motion animation of the button arrow
    }
  }

  &:focus {
    outline: none; // remove default blue border
    // create a pulsating animation (@keiframes)
    animation: pulsate 1s infinite; // without infinite work only on click
  }
}

@keyframes pulsate {
  0% {
    transform: scale(1);
    box-shadow: none;
  }

  50% {
    transform: scale(1.05);
    box-shadow: 0 1rem 4rem rgba(0, 0, 0, 0.25);
  }

  100% {
    transform: scale(1);
    box-shadow: none;
  }
}

///////////////////////////////////////////
/// PARAGRAPH

.paragraph:not(:last-of-type) {
  // second paragraph without margin ("last-of-type" applies of the same type of element)
  margin-bottom: 2rem;
}
///////////////////////////////////////////
/// LIST

.list {
  //format the list
  list-style: none;
  margin: 3rem;
  padding: 3rem 0; // 3rem (top bottom) 0rem (right left)
  border-top: var(--line);
  border-bottom: var(--line);

  // dispose element side-by-side
  display: flex;
  //in order to arrange the elements as they should
  flex-wrap: wrap;

  &__item {
    // not to use fixed width we use flex because we need side-by-side with fixed width
    flex: 0 0 50%;
    //let's move apart elements of list
    margin-bottom: 0.7rem;
  }

  &__item::before {
    // next 4 lines always need (use mixin if poject have lot of icons in css directly)
    content: "";
    display: inline-block;
    height: 1rem;
    width: 1rem;
    // margin
    margin-right: 0.7rem;
    //the icon itself !Its for oleder browsers
    background-image: url(../img/chevron-thin-right.svg);
    background-size: cover;

    //Newer browsers - masks
    //supports - if -webkit-mask-image: url() or mask-image: url() - dont work in user browsers
    @supports (-webkit-mask-image: url() or (mask-image: url())) {
      background-color: var(--color-primary);
      -webkit-mask-image: url(../img/chevron-thin-right.svg);
      -webkit-mask-size: cover;
      mask-image: url(../img/chevron-thin-right.svg);
      mask-size: cover;
      // for old chrome/safari - for pink icons
      background-image: none;
    }
  }
}

/// ///////////////////////////////////////////
/// RECOMMEND
.recommend {
  //format recommendations
  font-size: 1.3rem;
  color: var(--color-grey-dark-3);

  //move the photos
  display: flex;
  align-items: center;

  &__count {
    // this trick move photos to the right side
    margin-right: auto;
  }

  &__friends {
    // because we need for this item stay side by side all the time
    display: flex;
  }

  &__photo {
    //format the photo of friends
    height: 4rem;
    width: 4rem;
    border-radius: 50%;
    // white border
    border: 3px solid #fff;
    //  with a white border photos are compressed by 3 pixels, lets fix it automatically
    box-sizing: content-box; // default state

    //interact with photo exept the last element (child)
    &:not(:last-child) {
      margin-right: -2rem;
    }
  }
}

/// ///////////////////////////////////////////
/// REVIEWS
.review {
  background-color: #fff;
  box-shadow: var(--shadow-light);
  // lets spread two element (figure)
  padding: 3rem;
  margin-bottom: 3.5rem;
  // parent position for quotes in &::before
  position: relative;
  overflow: hidden;

  @media only screen and (max-width: $bp-medium) {
    //decrease all paddings and margins (squeeze)
    padding: 2rem;
    margin-bottom: 3rem;
  }

  &__text {
    // space betweeb testimonials and user photo+rating+user name+date
    margin-bottom: 2rem;
    // fix overlay of quotes for &::before
    z-index: 10;
    position: relative; // z-index works only with position
  }

  &__user {
    display: flex;
    // justify-content: space-between;
    align-items: center;
  }

  &__photo {
    //so that the photos take up more space and make it round
    height: 4.5rem;
    width: 4.5rem;
    border-radius: 50%;
    // space between photo and name+date
    margin-right: 1.5rem;
  }

  &__user-box {
    // spread the user rating and other
    margin-right: auto;
  }

  &__user-name {
    font-size: 1.1rem;
    text-transform: uppercase;
    font-weight: 600;
    margin-bottom: 0.4rem;
  }

  &__user-date {
    font-size: 1rem;
    color: var(--color-grey-dark-3);
  }

  &__rating {
    font-size: 2.2rem;
    color: var(--color-primary);
    font-weight: 300;
  }

  // big quotes mark
  &::before {
    content: "\201C"; // special symbol from css-tricks
    //set the position for quotes
    position: absolute;
    top: -2.75rem;
    left: -1rem;
    //format size of quotes
    font-size: 20rem;
    line-height: 1;
    color: var(--color-grey-light-4);
    // font-family for the correct symbol
    font-family: sans-serif;
    // fix overlay
    z-index: 1;
  }
}

/// ///////////////////////////////////////////
/// CALL TO ACTION
.cta {
  padding: 3.5rem 0;
  //automatically center the h2 element as well as the button
  text-align: center;

  @media only screen and (max-width: $bp-medium) {
    //decrease all paddings and margins (squeeze)
    padding: 2.5rem 0;
  }

  &__book-now {
    font-size: 2rem;
    text-transform: uppercase;
    font-weight: 300;
    margin-bottom: 2.5rem;
  }
}

/// ///////////////////////////////////////////
/// BUTTON
.btn {
  // style shape of button and text inside the button
  font-size: 1.5rem;
  font-weight: 300;
  text-transform: uppercase;
  border-radius: 100px;
  border: none;
  background-image: linear-gradient(
    to right,
    var(--color-primary-light),
    var(--color-primary-dark)
  );
  cursor: pointer;
  color: #fff;
  // this position for lift "Only 4 rooms left" we dont see this part it is above the button
  position: relative;
  // his for hide "Only 4 rooms left" we dont see this part it is above the button
  overflow: hidden;

  & > * {
    display: inline-block;
    // this padding is going to define the size of the button
    width: 100%;
    height: 100%;
    //animation
    transition: all 0.2s;
  }

  &__visible {
    padding: 2rem 7.5rem;
  }

  &__invisible {
    // lets hide the "Only 4 rooms left"
    padding: 2rem;
    position: absolute;
    left: 0;
    top: -100%;
  }

  &:hover {
    // its for color transition
    background-image: linear-gradient(
      to left,
      var(--color-primary-light),
      var(--color-primary-dark)
    );
  }

  &:hover &__visible {
    transform: translateY(
      100%
    ); // the visible part, will translate 100% of its height down !YYY!
  }

  &:hover &__invisible {
    // top: 0 = completely visible in button for moving down "Only 4 rooms left"
    top: 0;
  }

  &:focus {
    outline: none;
    animation: pulsate 1s infinite; // custom animation!
  }
}
